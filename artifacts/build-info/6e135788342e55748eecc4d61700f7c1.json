{
	"id": "6e135788342e55748eecc4d61700f7c1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Ownable.sol": {
				"content": "pragma solidity ^0.8.0;\n\ncontract Ownable{\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Ownable.sol": {
				"Ownable": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ownable.sol\":25:49  contract Ownable{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ownable.sol\":25:49  contract Ownable{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122054bf6a60974f2051e677ff3cd828347ff0a3dbef470dfa53f43e3cfea285bebe64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122054bf6a60974f2051e677ff3cd828347ff0a3dbef470dfa53f43e3cfea285bebe64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xBF PUSH11 0x60974F2051E677FF3CD828 CALLVALUE PUSH32 0xF0A3DBEF470DFA53F43E3CFEA285BEBE64736F6C634300080700330000000000 ",
							"sourceMap": "25:24:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122054bf6a60974f2051e677ff3cd828347ff0a3dbef470dfa53f43e3cfea285bebe64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xBF PUSH11 0x60974F2051E677FF3CD828 CALLVALUE PUSH32 0xF0A3DBEF470DFA53F43E3CFEA285BEBE64736F6C634300080700330000000000 ",
							"sourceMap": "25:24:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 49,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25,
									"end": 49,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25,
									"end": 49,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 49,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 49,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 49,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25,
									"end": 49,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 49,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25,
									"end": 49,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 49,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 49,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25,
									"end": 49,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 49,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25,
									"end": 49,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25,
									"end": 49,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 49,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 49,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 49,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 49,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25,
									"end": 49,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 49,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122054bf6a60974f2051e677ff3cd828347ff0a3dbef470dfa53f43e3cfea285bebe64736f6c63430008070033",
									".code": [
										{
											"begin": 25,
											"end": 49,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25,
											"end": 49,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25,
											"end": 49,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25,
											"end": 49,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 49,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 49,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Ownable.sol\":{\"keccak256\":\"0xd0c083c433c6bdd1307848d2858adad82ddfa38c7942f67d2e60c4a337fc86e9\",\"urls\":[\"bzz-raw://3d4e25ff879e8b24af081ab37b3a3ad820e3413c30c974564789ab54993b44e7\",\"dweb:/ipfs/QmfA3FUhJYWeP7PkLYQB6rL1BjTHZvVVBrMcfLa519ZSrC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Ownable.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Ownable.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Ownable.sol": {
				"ast": {
					"absolutePath": "Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Ownable",
							"nameLocation": "34:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "25:24:0",
							"usedErrors": []
						}
					],
					"src": "0:49:0"
				},
				"id": 0
			}
		}
	}
}